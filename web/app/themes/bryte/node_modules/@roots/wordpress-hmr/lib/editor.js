import { Cache } from '@roots/wordpress-hmr/cache';
import { dispatch } from '@wordpress/data';
let initial = true;
let notify = true;
export const setNotify = (value) => {
    notify = value;
};
export const load = ({ accept, after, api, before, getContext }) => {
    const cache = new Cache();
    const handler = () => {
        const changed = [];
        before && before();
        const context = getContext();
        context?.keys().forEach((key) => {
            const raw = context(key);
            const source = raw.default ?? raw;
            if (cache.is(key, source))
                return;
            if (cache.has(key))
                api.unregister(cache.get(key));
            api.register(source);
            changed.push(source);
            cache.set(key, source);
        });
        after && after(changed);
        if (initial && notify && import.meta.webpackHot) {
            initial = false;
            dispatch(`core/notices`).createInfoNotice(`ðŸ”¥ Reload enabled`, {
                id: `hmr-enabled`,
                type: `snackbar`,
            });
        }
        return context;
    };
    const { id } = handler();
    accept(id, handler);
};
