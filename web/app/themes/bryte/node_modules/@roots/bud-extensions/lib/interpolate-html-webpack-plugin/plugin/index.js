import { __decorate } from "tslib";
import { bind } from '@roots/bud-support/decorators/bind';
/**
 * Template variable interpolation plugin for webpack
 */
class InterpolateHtmlWebpackPlugin {
    getHooks;
    replacements;
    /**
     * Plugin name
     */
    name = `interpolate-html-webpack-plugin`;
    /**
     * Class constructor
     */
    constructor(getHooks, replacements) {
        this.getHooks = getHooks;
        this.replacements = replacements;
    }
    /**
     * {@link WebpackPluginInstance.apply}
     */
    apply(compiler) {
        compiler.hooks.compilation.tap(`InterpolateHtmlPlugin`, compilation => this.getHooks(compilation).afterTemplateExecution.tap(`interpolate-html-plugin`, (data) => {
            if (!this.replacements ||
                Object.keys(this.replacements).length === 0)
                return data;
            Object.entries(this.replacements).forEach(([key, value]) => {
                data.html = data.html
                    .replaceAll(new RegExp(`{{${key}}}`, `g`), value)
                    .replaceAll(new RegExp(`%${key}%`, `g`), value);
            });
            return data;
        }));
    }
}
__decorate([
    bind
], InterpolateHtmlWebpackPlugin.prototype, "apply", null);
export { InterpolateHtmlWebpackPlugin as default };
