import type { Bud } from '@roots/bud-framework';
import type BudWordPressDependencies from '@roots/bud-wordpress-dependencies';
import type BudWordPressExternals from '@roots/bud-wordpress-externals';
import type WordPressThemeJson from '@roots/bud-wordpress-theme-json';
import { Extension, type OptionGetter, type OptionSetter } from '@roots/bud-framework/extension';
/**
 * WordPress preset options
 */
interface Options {
    exclude: Array<string>;
    hmr: boolean;
    notify: boolean;
    scriptDebug: boolean;
}
/**
 * WordPress preset
 */
export default class BudPresetWordPress extends Extension<Options> {
    scriptDebug: Options[`scriptDebug`];
    getScriptDebug: OptionGetter<Options, `scriptDebug`>;
    setScriptDebug: OptionSetter<BudPresetWordPress, Options, `scriptDebug`>;
    /**
     * Exclude dependencies from externals and the `entrypoints.json` manifest
     *
     * @default []
     */
    readonly exclude: Options[`exclude`];
    /**
     * Get excluded dependencies
     *
     * @returns Array<string>
     */
    getExclude: OptionGetter<Options, `exclude`>;
    /**
     * Set excluded dependencies
     */
    setExclude: OptionSetter<BudPresetWordPress, Options, `exclude`>;
    /**
     * Enable `@roots/wordpress-hmr` functionality
     *
     * @default true
     */
    readonly hmr: Options[`hmr`];
    /**
     * Get `@roots/wordpress-hmr` functionality
     *
     * @returns boolean
     */
    getHmr: OptionGetter<Options, `hmr`>;
    /**
     * Set `@roots/wordpress-hmr` functionality
     *
     * @param value boolean
     * @returns this
     *
     * @example
     * ```js
     * bud.wp.setHmr(false)
     * ```
     *
     * @example
     * ```js
     * bud.wp.setHmr(hmr => false)
     * ```
     */
    setHmr: OptionSetter<BudPresetWordPress, Options, `hmr`>;
    /**
     * WordPress editor toast notifications value
     *
     * @returns boolean
     */
    notify: Options[`notify`];
    /**
     * Get WordPress editor toast notifications
     *
     * @returns boolean
     */
    getNotify: OptionGetter<Options, `notify`>;
    /**
     * Toggle WordPress editor toast notifications
     *
     * @param value boolean
     * @returns this
     *
     * @example
     * ```js
     * bud.wp.setNotify(false)
     * ```
     *
     * @example
     * ```js
     * bud.wp.setNotify(notify => false)
     * ```
     */
    setNotify: OptionSetter<BudPresetWordPress, Options, `notify`>;
    /**
     * {@link BudWordPressDependencies}
     */
    get dependencies(): BudWordPressDependencies;
    /**
     * {@link BudWordPressExternals}
     */
    get externals(): BudWordPressExternals;
    /**
     * {@link WordPressThemeJson}
     */
    get json(): WordPressThemeJson;
    /**
     * {@link Extension.boot}
     */
    boot(bud: Bud): Promise<void>;
    /**
     * {@link Extension.buildBefore}
     */
    buildBefore(bud: Bud): Promise<void>;
    private handleExclusions;
    private handleHmr;
    /**
     * Compiler check
     *
     * @todo remove in bud 7.0.0
     */
    private compilerCheck;
}
export {};
