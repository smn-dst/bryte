/**
 * Blade loader plugin
 */
export default class BladeWebpackPlugin {
    options;
    /**
     * Plugin constructor
     */
    constructor(options) {
        this.options = options;
        this.apply = this.apply.bind(this);
    }
    /**
     * {@link WebpackPluginInstance.apply}
     */
    async apply(compiler) {
        const use = [`@roots/blade-loader/asset-loader`];
        if (this.options?.extractScripts !== false) {
            use.unshift(`@roots/blade-loader/module-loader`);
        }
        compiler.hooks.afterEnvironment.tap(this.constructor.name, () => {
            compiler.options.module.rules.push({
                test: /\.php$/,
                use,
            });
        });
    }
}
