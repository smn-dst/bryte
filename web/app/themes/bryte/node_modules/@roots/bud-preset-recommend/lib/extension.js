import { __decorate } from "tslib";
import { Extension } from '@roots/bud-framework/extension';
import { bind, dependsOn, label, } from '@roots/bud-framework/extension/decorators';
/**
 * Recommended preset
 */
let BudPresetRecommend = class BudPresetRecommend extends Extension {
    constructor(bud) {
        super(bud);
        this.set(`dependencies`, [
            ...Object.keys(this.app.context?.manifest?.dependencies ?? {}),
            ...Object.keys(this.app.context?.manifest?.devDependencies ?? {}),
        ]);
    }
    async register(bud) {
        if ([
            `@roots/bud-babel`,
            `@roots/bud-typescript`,
            `@roots/bud-esbuild`,
            `@roots/bud-swc`,
        ].some(signifier => this.get(`dependencies`).includes(signifier)))
            return;
        await bud.extensions.add(`@roots/bud-swc`);
    }
};
__decorate([
    bind
], BudPresetRecommend.prototype, "register", null);
BudPresetRecommend = __decorate([
    label(`@roots/bud-preset-recommend`),
    dependsOn([`@roots/bud-postcss`])
], BudPresetRecommend);
export default BudPresetRecommend;
