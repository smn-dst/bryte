import type { SignaleOptions } from 'signale';
import Signale from 'signale';
/**
 * Logger
 */
declare class Logger {
    options: SignaleOptions;
    /**
     * Enabled
     */
    enabled: boolean;
    /**
     * Logger instance
     */
    instance: Signale.Signale;
    /**
     * Verbose
     */
    verbose: boolean;
    /**
     * Class constructor
     */
    constructor(options?: SignaleOptions);
    await(...messages: Array<unknown>): this;
    debug(...messages: Array<unknown>): this;
    error(...messages: Array<unknown>): this;
    info(...messages: Array<unknown>): this;
    log(...messages: Array<unknown>): this;
    scope(...scopes: Array<string>): this;
    success(...messages: Array<unknown>): this;
    time(label?: string): this;
    timeEnd(label?: string): this;
    unscope(): this;
    warn(...messages: Array<unknown>): this;
}
declare let instance: Logger;
export declare const initialize: (options: SignaleOptions) => Logger;
export { instance as default, Logger };
