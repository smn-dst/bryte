import type { InternalOptionsValues, Options } from '../index.js';
/**
 * `@options` is a decorator that adds getter and setter methods
 * for the specified options to an {@link Extension} class.
 *
 * It defines a `get` and `set` function for each key in the provided options object,
 * unless these functions or the key itself is already defined on the {@link Extension} instance.
 *
 * The `get` function retrieves the current value of the option,
 * while the `set` function updates the option's value and returns the {@link Extension} instance for chaining.
 *
 * This allows easy interaction with options in the {@link Extension} class in a uniform manner.
 *
 * @param options - A subset of the options expected in the decorated {@link Extension} class.
 * @returns A class extending the decorated {@link Extension} class, with additional getter and setter methods.
 */
export declare const options: <Opts extends Options<Record<string, any>> = Record<string, unknown>>(options: Partial<InternalOptionsValues<Opts>>) => <Type extends new (...args: any[]) => any>(constructor: Type) => {
    new (...args: any[]): {
        [x: string]: any;
    };
} & Type;
