import type { Bud } from '../index.js';
export interface Callback {
    (value?: Bud): Promise<unknown>;
}
export interface Callback {
    (value?: Bud): unknown;
}
export interface sequence<T = Bud> {
    (fns: Array<Callback>): Promise<Bud>;
}
/**
 * Run a value through an array of asyncronous, non-mutational functions.
 *
 * @remarks
 * Unlike {@link Bud.pipe} the value returned from each function is ignored.
 */
export declare const sequence: (fns: Array<Callback>) => Promise<Bud>;
interface SyncCallback {
    (value: unknown): unknown;
}
export interface sequenceSync {
    (fns: Array<SyncCallback>): Bud;
}
/**
 * Run a value through an array of syncronous, non-mutational functions.
 *
 * @remarks
 * Unlike {@link pipe} the value returned from each function is ignored.
 */
export declare const sequenceSync: sequenceSync;
export {};
