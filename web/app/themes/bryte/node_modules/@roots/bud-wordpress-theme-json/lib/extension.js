import { __decorate } from "tslib";
import { DynamicOption, Extension, } from '@roots/bud-framework/extension';
import { bind, disabled, expose, label, options, plugin, } from '@roots/bud-framework/extension/decorators';
import isBoolean from '@roots/bud-support/isBoolean';
import isFunction from '@roots/bud-support/isFunction';
import Container from '@roots/container';
import ThemeJsonWebpackPlugin from '@roots/wordpress-theme-json-webpack-plugin';
/**
 * WordPress theme.json configuration
 *
 * @example
 * ```ts
 * bud.themeJson(theme =>
 *   theme.set('color', {})
 * )
 * ```
 */
let WordPressThemeJson = class WordPressThemeJson extends Extension {
    /**
     * ## bud.wp.json.settings
     *
     * Edit the `settings` key of theme.json
     *
     * @example
     * ```ts
     * bud.wp.json.settings({
     *  color: {
     *    custom: false,
     *    customGradient: false,
     *    palette: [
     *      {
     *        color: '#f7fafc',
     *        name: 'Gray',
     *        slug: 'gray'
     *      }
     *    ]
     * })
     * ```
     *
     * @example
     * Edit existing values with a callback:
     *
     * ```ts
     * bud.wp.json.settings((settings = {}) => ({
     *   ...settings,
     *   color: {},
     * }))
     * ```
     */
    settings(input, raw) {
        if (!input)
            return this;
        if (isBoolean(input)) {
            this.enable(input);
            return this;
        }
        this.enable();
        let value;
        if (raw === true && isFunction(input)) {
            const fn = input;
            this.setSettings(fn(this.options.settings));
            return this;
        }
        if (isFunction(input)) {
            const fn = input;
            this.setSettings(fn(this.app.container(this.options.settings)).all());
            return this;
        }
        this.setSettings(value);
        return this;
    }
};
__decorate([
    bind
], WordPressThemeJson.prototype, "settings", null);
WordPressThemeJson = __decorate([
    label(`@roots/bud-wordpress-theme-json`),
    options({
        __generated__: `⚠️ This file is generated. Do not edit.`,
        customTemplates: undefined,
        path: DynamicOption.make(({ path }) => path(`./theme.json`)),
        patterns: undefined,
        settings: {
            color: {
                custom: false,
                customGradient: false,
            },
            custom: {
                spacing: {},
                typography: { 'font-size': {}, 'line-height': {} },
            },
            spacing: {
                padding: true,
                units: [`px`, `%`, `em`, `rem`, `vw`, `vh`],
            },
            typography: {
                customFontSize: false,
                dropCap: false,
            },
        },
        styles: undefined,
        templateParts: undefined,
        title: undefined,
        version: undefined,
    }),
    plugin(ThemeJsonWebpackPlugin),
    expose(`wpjson`),
    disabled
], WordPressThemeJson);
export { WordPressThemeJson };
