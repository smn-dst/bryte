import BudCommand from '@roots/bud/cli/commands';
type Type = `dependencies` | `devDependencies`;
/**
 * `bud upgrade` command
 */
export default class BudUpgradeCommand extends BudCommand {
    /**
     * {@link Command.paths}
     */
    static paths: string[][];
    /**
     * {@link Command.usage}
     */
    static usage: import("@roots/bud-support/clipanion").Usage;
    /**
     * {@link BudCommand.clean}
     */
    clean: boolean;
    /**
     * {@link BudCommand.force}
     */
    force: boolean;
    /**
     * Browserslist option
     */
    browserslistUpdate: boolean;
    /**
     * Package manager option
     */
    pm: "bun" | "npm" | "pnpm" | "yarn-classic" | "yarn";
    /**
     * Registry option
     */
    registry: string;
    /**
     * Version option
     */
    version: string;
    /**
     * Package manager bin
     */
    get bin(): `bun` | `npm` | `pnpm` | `yarn`;
    /**
     * Package manager subcommand
     */
    get subcommand(): `add` | `install`;
    /**
     * Index of upgradeable package signifiers
     */
    upgradeable: {
        dependencies: Array<string>;
        devDependencies: Array<string>;
    };
    /**
     * Do registry request
     */
    doRegistryRequest(uri: string): Promise<any>;
    /**
     * {@link Command.execute}
     */
    execute(): Promise<void>;
    /**
     * Find relevant signifiers for bud packages
     */
    findCandidates(type: Type): Array<string>;
    /**
     * Get upgradeable dependencies and their versions
     * from the registry
     */
    getUpgradeableDependencies(type: Type): Promise<Array<string>>;
    upgrade(type: Type, flags?: any[]): Promise<void>;
}
export {};
